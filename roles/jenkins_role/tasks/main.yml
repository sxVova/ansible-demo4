- name: Update system
  apt: update_cache=yes

- name: Install pip
  apt:
    name: python-pip

-  name: Install virtualenv
   shell: pip2 install virtualenv

-  name: Create virtualenv and activate
   shell: virtualenv "sxvova-venv" 
          creates="sxvova-venv/bin/activate"

- name: Install boto python package
  shell: pip2 install -U boto

- name: Upgrade boto 
  shell: pip2 install boto --upgrade --user

- name: Install jdk
  apt: name=openjdk-8-jdk state=latest

- name: Install jre
  apt: name=openjdk-8-jre state=latest

- name: Add jenkins key
  shell: wget -q -O - https://pkg.jenkins.io/debian/jenkins-ci.org.key | sudo apt-key add -

- name: Add jenkins list
  shell: sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'

- name: Update system
  apt: update_cache=yes

- name: Install jenkins
  apt:
    name: jenkins=2.204.2

- name: Add ansible repository
  shell: sudo apt-add-repository ppa:ansible/ansible

- name: Update system
  apt: update_cache=yes

- name: Install pip
  apt:
    name: ansible=2.9

- name: Install libxmlsec1-dev
  apt:
    name: libxmlsec1-dev

- name: Install pkg-config
  apt:
    name: pkg-config

- name: Install virtualenv
  apt:
    name: virtualenv

- name: Install memcached
  apt:
    name: memcached 

- name: Install redis-server
  apt:
    name: redis-server

- name: Install postgresql
  apt:
    name: postgresql

- name: Install unzip
  apt:
    name: unzip

-  name: Create virtualenv and activate
   shell: virtualenv --no-setuptools foo
          creates="foo/bin/activate"

- name: Install setuptools
  shell: pip install setuptools

-  name: Virtualenv deactivate
   shell: deactivate

- name: Install jenkins cli
  shell: wget http://35.239.147.40:8080/jnlpJars/jenkins-cli.jar
  
- name: Move jenkins cli
  shell: mv jenkins-cli.jar /

# restore part

- name: Create backup directory
  file: path=/tmp/backup state=directory

- name: Upload restore script
  copy: src=jenkins-restore.sh dest=/tmp/backup/jenkins-restore.sh mode=0755

- name: Download backup file from gcloud
  gc_storage:
    bucket:        '{{ gcloud_storage_name }}'
    object:        '{{ gcloud_tar_name }}'
    dest:          /tmp/backup/{{ gcloud_tar_name }}
    gs_access_key: '{{ gcloud_storage_key }}'
    gs_secret_key: '{{ gcloud_storage_secret_key }}'
    mode: get

-  name: Restore jenkins home directory
   shell: /tmp/backup/jenkins-restore.sh /var/lib/jenkins /tmp/backup/{{ gcloud_tar_name }}

- name: Restore ownership
  shell: chown jenkins.jenkins -R /var/lib/jenkins

- name: Remove backup file
  file: path=/tmp/backup/{{ gcloud_tar_name }} state=absent

- name: Restart jenkins
  service: name=jenkins state=restarted

